input {
  udp {
    port => 5000
    type => "log"
  }
  tcp {
    port => 5000
    type => "log"
  }
}

filter {
  if [type] == "log" {
    grok {
      match => { "message" => "%{SYSLOGBASE} %{GREEDYDATA:message}" }
      overwrite => [ "message" ]
    }
    date {
        match => [ "timestamp", "MMM dd HH:mm:ss", "MMM  d HH:mm:ss"  ]
        timezone => "Asia/Tehran"
    }

    if [message] =~ /^pam_/ {
      grok {
        patterns_dir   => "/usr/share/logstash/config/patterns/"
        match => { "message" => "%{PAM}" }
        add_tag => [ "_grok_pam_success" ]
      }
      if [pam_kvdata] {
        mutate {
          gsub => [ "pam_kvdata", "= ", '=- ' ]
        }
        kv {
          source => "pam_kvdata"
          prefix => "pam_"
        }
        mutate {
          remove_field => [ "pam_kvdata" ]
        }
      }
    }

    if [program] == "sshd" {
      grok {
        patterns_dir   => "/usr/share/logstash/config/patterns/"
        match => { "message" => "%{SSH_AUTHFAIL_WRONGCREDS}" }
        add_field => { "ssh_authresult" => "fail" "ssh_failreason" => "wrong_credentials" }
        add_tag => [ "_grok_sshd_success", "matched" ]
      }
      grok {
        patterns_dir   => "/usr/share/logstash/config/patterns/"
        match => { "message" => "%{SSH_AUTHFAIL_WRONGUSER}" }
        add_field => { "ssh_authresult" => "fail" "ssh_failreason" => "unknown_user" }
        add_tag => [ "_grok_sshd_success", "matched" ]
      }
      grok {
        patterns_dir   => "/usr/share/logstash/config/patterns/"
        match => { "message" => "%{SSH_AUTH_SUCCESS}" }
        add_field => { "ssh_authresult" => "success" }
        add_tag => [ "_grok_sshd_success", "matched" ]
      }
      if [ssh_authresult] == "success" {
        mutate {
          copy => { "ssh_pubkey_fingerprint" => "Soltan" }
        }
        mutate {
          gsub => [
            "Soltan", "SHA256:wrp7GZpxVq7v\+a6Oe3CTs03VSZJlvSnyWtwTJ\/E64f8", "Mostafa",
            "Soltan", "SHA256:V8d\+jlj01Qzve1CXlG0xXrSqylZayMJed1jqh6\+lXa4", "Mohammad",
            "Soltan", "SHA256:TQUamjix8M8rV9yurWfapd0T5edpL2D5tXzuJXFRikA", "Ali",
            "Soltan", "SHA256:BSOBgvLbjGl1\/pNAPorpitM9CX5C5qehAIhSRuviYlU", "Mehdi",
            "Soltan", "SHA256:OORy7fn43X02qM0Kzh1ETOOwIof\/I3GaB7nl272Scmc", "Seyed",
            "Soltan", "SHA256:tasaE\/8V4JVs8wJL\+qwAFnd\+BhhPhQEsTECuoyJMCn4", "Arshia",
            "Soltan", "SHA256:kItxI4LS4dmonQMTB8kqcmKq8\/yc9pylpu\/wWX6y\+0Y", "Zahra"
            #"Soltan", "SHA256:V8d\+jlj01Qzve1CXlG0xXrSqylZayMJed1jqh6\+lXa4", "Alireza"
          ]
        }
        mutate {
          gsub => [
            "Soltan", "SHA256.{15,}", "Unknown"
          ]
        }
      }
      grok {
        patterns_dir   => "/usr/share/logstash/config/patterns/"
        match => { "message" => "%{SSH_DISCONNECT}" }
        add_tag => [ "_grok_sshd_success", "matched", "ssh_disconnect" ]
      }
      mutate {
        remove_tag => [ "matched", "_grokparsefailure" ]
      }
    }

    if [program] == "command" {
      grok {
        match => { "message" => "%{USERNAME:Soltan}\:%{GREEDYDATA:command}"}
      }
    }

    if [program] == "sudo" {
      grok {
        patterns_dir   => "/usr/share/logstash/config/patterns/"
        match => { "message" => "%{SUDO}" }
        add_tag => [ "_grok_sudo_success" ]
      }
    }

    if [program] == "su" {
      grok {
        patterns_dir   => "/usr/share/logstash/config/patterns/"
        match => { "message" => "%{SU}" }
        add_tag => [ "_grok_su_success" ]
      }
    }

    if [program] == "systemd-logind" {
      grok {
        patterns_dir   => "/usr/share/logstash/config/patterns/"
        match => { "message" => "%{SYSTEMD_LOGIND}" }
        add_tag => [ "_grok_systemd_logind_success" ]
      }
    }

    if [program] in [ "useradd", "groupadd" ] {
      grok {
        patterns_dir   => "/usr/share/logstash/config/patterns/"
        match => { "message" => "%{ACCOUNT_ADD}" }
        add_field => { "account_action" => "create" }
        add_tag => [ "_grok_new_account_success" ]
      }
      if [account_kvdata] {
        mutate {
            gsub => [ "account_kvdata", ", ", '|' ]
        }
        kv {
            source => "account_kvdata"
            prefix => "account_"
            field_split => "|"
        }
        mutate {
            remove_field => [ "account_kvdata" ]
        }
      }
    }

    if [program] == "usermod" {
      grok {
        patterns_dir   => "/usr/share/logstash/config/patterns/"
        match => { "message" => "%{USERMOD}" }
        add_tag => [ "_grok_usermod_success" ]
      }
    }

    if [program] == "userdel" {
      grok {
        patterns_dir   => "/usr/share/logstash/config/patterns/"
        match => { "message" => "%{USERDEL}" }
        add_tag => [ "_grok_userdel_success" ]
      }
      mutate {
        gsub => [ "account_action", "remove", "delete" ]
      }
    }

    if [program] == "groupdel" {
      grok {
        patterns_dir   => "/usr/share/logstash/config/patterns/"
        match => { "message" => "%{GROUPDEL}" }
        add_field => { "account_action" => "delete" }
        add_tag => [ "_grok_groupdel_success" ]
      }
    }
  }
}

output {
  if [type] == "log" {
    elasticsearch {
    hosts => [ "172.16.10.51:9200", "172.16.10.52:9200", "172.16.10.53:9200" ]
    index => "syslog-%{type}-%{+YYYY.MM}"
    template => "/usr/share/logstash/config/syslog_logs_template.json"
    template_name => "syslog_logs"
    template_overwrite => true
    }
    stdout {}
  }
}
